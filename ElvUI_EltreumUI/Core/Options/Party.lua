local E, _, _, P = unpack(ElvUI)
local L = E.Libs.ACL:GetLocale('ElvUI', E.global.general.locale)
local _G = _G

-- Eltruism party options
function ElvUI_EltreumUI:PartyOptions()
	ElvUI_EltreumUI.Options.args.party = E.Libs.ACH:Group(E:TextGradient(L["Party/Raid"], 0.50, 0.70, 1, 0.67, 0.95, 1), L["Play sounds when party members die, show resurrection timers and change instance texts"], 85, 'tab')
	ElvUI_EltreumUI.Options.args.party.icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\party'
	ElvUI_EltreumUI.Options.args.party.args.general = E.Libs.ACH:Group(L["General"], nil, 1, "tab")
	ElvUI_EltreumUI.Options.args.party.args.general.args.description1 = E.Libs.ACH:Description(L["Play a sound when someone dies in Party or Raid"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.party.args.general.args.deathssound = E.Libs.ACH:Toggle(L["Enable"], nil, 2, nil, false, "full", function() return E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.enable end, function(_, value) E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.enable = value end)
	ElvUI_EltreumUI.Options.args.party.args.general.args.deathssoundbg= E.Libs.ACH:Toggle(L["Disable in Battlegrounds/Arenas"], nil, 3, nil, false, "full", function() return E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.bgdisable end, function(_, value) E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.bgdisable = value end, function() return not E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.enable end)
	ElvUI_EltreumUI.Options.args.party.args.general.args.deathssoundLSM = E.Libs.ACH:SharedMediaSound(L["Select a Sound"], L["Choose a Sound from SharedMedia files"], 4, "double", function() return E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.playerdeathsound end, function(_,key) E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.playerdeathsound = key end, function() return not E.db.ElvUI_EltreumUI.otherstuff.partyraiddeath.enable end)
	ElvUI_EltreumUI.Options.args.party.args.general.args.description2 = E.Libs.ACH:Description(" ", 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.general.args.battleres = E.Libs.ACH:Toggle(L["Show a Battle Resurrection Count and Cooldown Frame"], L["Enables a frame that shows a cooldown and count for battle resurrections while in an instance that has them"], 6, nil, false, "full", function() return E.db.ElvUI_EltreumUI.otherstuff.bres end, function(_, value) E.db.ElvUI_EltreumUI.otherstuff.bres = value E:StaticPopup_Show('CONFIG_RL') end, nil, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.general.args.description3 = E.Libs.ACH:Description(_G.COMBAT_LOG, 7, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.party.args.general.args.autocombatlog = E.Libs.ACH:Toggle(L["Enable Automatic Combat Log"], nil, 8, nil, false, "full", function() return E.db.ElvUI_EltreumUI.cvars.combatlog end, function(_, value) E.db.ElvUI_EltreumUI.cvars.combatlog = value end)
	ElvUI_EltreumUI.Options.args.party.args.general.args.description4 = E.Libs.ACH:Description(_G.DUNGEONS_BUTTON, 9, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderSpecIcons = E.Libs.ACH:Toggle(L["Add Spec Icons to the Group Finder Listing"] or L["Add Class Icons to the Group Finder Listing"], nil, 10, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.groupfinderSpecIcons end, function(_, value) E.db.ElvUI_EltreumUI.skins.groupfinderSpecIcons = value E:StaticPopup_Show('CONFIG_RL') end, nil, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderDungeonScore = E.Libs.ACH:Toggle(L["Add Dungeon Score to Group Finder Listing"], nil, 11, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.groupfinderDungeonScore end, function(_, value) E.db.ElvUI_EltreumUI.skins.groupfinderDungeonScore = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.skins.groupfinderSpecIcons end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderSpecIconsType = E.Libs.ACH:Select(L["Style"], nil, 12, {
		["SPEC"] = L["Spec"],
		["CLASS"] = _G.CLASS,
	}, false, nil, function() return E.db.ElvUI_EltreumUI.skins.groupfinderSpecIconsType end, function(_, value) E.db.ElvUI_EltreumUI.skins.groupfinderSpecIconsType = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.skins.groupfinderSpecIcons end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderSpecIconsType.style = "radio"
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderIconStyle = E.Libs.ACH:Select(L["Country Style"], nil, 12, {
		["TEXT"] = L["Text"],
		["FLAG"] = L["Flag"],
	}, false, nil, function() return E.db.ElvUI_EltreumUI.skins.groupfinderIconStyle end, function(_, value) E.db.ElvUI_EltreumUI.skins.groupfinderIconStyle = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.skins.groupfinderSpecIcons end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.general.args.groupfinderIconStyle.style = "radio"

	ElvUI_EltreumUI.Options.args.party.args.instances = E.Libs.ACH:Group(L["Instances"], nil, 2, "tab")
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description1 = E.Libs.ACH:Description(L["Instance Texts"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 2, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.enable end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.enable = value end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.classcolor = E.Libs.ACH:Toggle(L["Use Class Colors"], nil, 3, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.classcolor end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.classcolor = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.unifycolor = E.Libs.ACH:Toggle(L["Difficulty Specific Colors"], L["Use different colors per Difficulty"], 4, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.difficultycolors end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.difficultycolors = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.color = E.Libs.ACH:Color(L["Instance Text Color"], nil, 5, false, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.r, E.db.ElvUI_EltreumUI.skins.instances.g, E.db.ElvUI_EltreumUI.skins.instances.b, 1, P.ElvUI_EltreumUI.skins.instances.r, P.ElvUI_EltreumUI.skins.instances.g, P.ElvUI_EltreumUI.skins.instances.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.r, E.db.ElvUI_EltreumUI.skins.instances.g, E.db.ElvUI_EltreumUI.skins.instances.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.gradientcolor = E.Libs.ACH:Toggle(L["Gradient Colors"], nil, 6, nil, false, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.gradient end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.gradient = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.gradientred = E.Libs.ACH:Range(L["Red"], nil, 7, { min = -1, max = 1, step = 0.01 }, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.redoffset end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.redoffset = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or not E.db.ElvUI_EltreumUI.skins.instances.gradient or E.db.ElvUI_EltreumUI.skins.instances.classcolor) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.gradientgreen = E.Libs.ACH:Range(L["Green"], nil, 7, { min = -1, max = 1, step = 0.01 }, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.greenoffset end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.greenoffset = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or not E.db.ElvUI_EltreumUI.skins.instances.gradient or E.db.ElvUI_EltreumUI.skins.instances.classcolor) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.gradientblue = E.Libs.ACH:Range(L["Blue"], nil, 7, { min = -1, max = 1, step = 0.01 }, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.blueoffset end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.blueoffset = value E:StaticPopup_Show('CONFIG_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or not E.db.ElvUI_EltreumUI.skins.instances.gradient or E.db.ElvUI_EltreumUI.skins.instances.classcolor) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.fontsize = E.Libs.ACH:Range(L["Font Size"], L["Instance text Font Size"], 8, { min = 4, max = 72, step = 1 }, "full", function() return E.db.ElvUI_EltreumUI.skins.instances.fontsize end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.fontsize = _G.tonumber(value) end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description4 = E.Libs.ACH:Description(" ", 9, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonNormalColor = E.Libs.ACH:Color(L["Color"], nil, 10, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.b, 1, P.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.r, P.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.g, P.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonNormalColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonNormalText = E.Libs.ACH:Input(L["Dungeon"], L["The text displayed when in a normal dungeon"], 11, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonNormal end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.DungeonNormal = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description5 = E.Libs.ACH:Description(" ", 12, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonHeroicColor = E.Libs.ACH:Color(L["Color"], nil, 13, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.b, 1, P.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.r, P.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.g, P.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroicColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonHeroicText = E.Libs.ACH:Input(L["Dungeon (Heroic)"], L["The text displayed when in a heroic dungeon"], 14, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroic end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.DungeonHeroic = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description6 = E.Libs.ACH:Description(" ", 15, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonTimewalkerColor = E.Libs.ACH:Color(L["Color"], nil, 16, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.b, 1, P.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.r, P.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.g, P.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalkerColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonTimewalkerText = E.Libs.ACH:Input(L["Dungeon (Timewalking)"], L["The text displayed when in a timewalking dungeon"], 17, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalker end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.DungeonTimewalker = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description7 = E.Libs.ACH:Description(" ", 18, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonMythicColor = E.Libs.ACH:Color(L["Color"], nil, 19, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.b, 1, P.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.r, P.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.g, P.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonMythicText = E.Libs.ACH:Input(L["Dungeon (Mythic)"], L["The text displayed when in a mythic dungeon"], 20, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonMythic end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.DungeonMythic = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description8 = E.Libs.ACH:Description(" ", 21, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonMythicPlusColor = E.Libs.ACH:Color(L["Color"], nil, 22, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.b, 1, P.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.r, P.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.g, P.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.r, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.g, E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlusColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.DungeonMythicPlusText = E.Libs.ACH:Input(L["Dungeon (Mythic Plus)"], L["The text displayed when in a mythic plus dungeon"], 23, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlus end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.DungeonMythicPlus = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description9 = E.Libs.ACH:Description(" ", 24, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidColor = E.Libs.ACH:Color(L["Color"], nil, 25, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidColor.b, 1, P.ElvUI_EltreumUI.skins.instances.RaidColor.r, P.ElvUI_EltreumUI.skins.instances.RaidColor.g, P.ElvUI_EltreumUI.skins.instances.RaidColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.RaidColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidText = E.Libs.ACH:Input(L["Raid (Normal)"], L["The text displayed when in a normal raid"], 26, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.Raid = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description10 = E.Libs.ACH:Description(" ", 27, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid10Color = E.Libs.ACH:Color(L["Color"], nil, 28, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.r, E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.g, E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.b, 1, P.ElvUI_EltreumUI.skins.instances.Raid10Color.r, P.ElvUI_EltreumUI.skins.instances.Raid10Color.g, P.ElvUI_EltreumUI.skins.instances.Raid10Color.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.r, E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.g, E.db.ElvUI_EltreumUI.skins.instances.Raid10Color.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid10Text = E.Libs.ACH:Input(L["Raid (Normal)"].." 10", L["The text displayed when in a normal raid"], 29, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid10 end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.Raid10 = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description11 = E.Libs.ACH:Description(" ", 30, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid25Color = E.Libs.ACH:Color(L["Color"], nil, 31, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.r, E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.g, E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.b, 1, P.ElvUI_EltreumUI.skins.instances.Raid25Color.r, P.ElvUI_EltreumUI.skins.instances.Raid25Color.g, P.ElvUI_EltreumUI.skins.instances.Raid25Color.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.r, E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.g, E.db.ElvUI_EltreumUI.skins.instances.Raid25Color.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid25Text = E.Libs.ACH:Input(L["Raid (Normal)"].." 25", L["The text displayed when in a normal raid"], 32, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid25 end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.Raid25 = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description12 = E.Libs.ACH:Description(" ", 33, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidHeroicColor = E.Libs.ACH:Color(L["Color"], nil, 34, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.b, 1, P.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.r, P.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.g, P.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidHeroicColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidHeroicText = E.Libs.ACH:Input(L["Raid (Heroic)"], L["The text displayed when in a heroic raid"], 35, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidHeroic end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.RaidHeroic = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description13 = E.Libs.ACH:Description(" ", 36, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid25HeroicColor = E.Libs.ACH:Color(L["Color"], nil, 37, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.b, 1, P.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.r, P.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.g, P.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.Raid25HeroicColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid25HeroicText = E.Libs.ACH:Input(L["Raid (Heroic)"].." 25", L["The text displayed when in a heroic raid"], 38, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid25Heroic end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.Raid25Heroic = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description14 = E.Libs.ACH:Description(" ", 39, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid10HeroicColor = E.Libs.ACH:Color(L["Color"], nil, 40, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.b, 1, P.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.r, P.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.g, P.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.r, E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.g, E.db.ElvUI_EltreumUI.skins.instances.Raid10HeroicColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.Raid10HeroicText = E.Libs.ACH:Input(L["Raid (Heroic)"].." 10", L["The text displayed when in a heroic raid"], 41, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.Raid10Heroic end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.Raid10Heroic = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, E.Classic)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description15 = E.Libs.ACH:Description(" ", 42, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidLFRColor = E.Libs.ACH:Color(L["Color"], nil, 43, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.b, 1, P.ElvUI_EltreumUI.skins.instances.RaidLFRColor.r, P.ElvUI_EltreumUI.skins.instances.RaidLFRColor.g, P.ElvUI_EltreumUI.skins.instances.RaidLFRColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidLFRColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidLFRText = E.Libs.ACH:Input(L["Raid (LFR)"], L["The text displayed when in a lfr raid"], 44, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidLFR end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.RaidLFR = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description16 = E.Libs.ACH:Description(" ", 45, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.MythicRaidColor = E.Libs.ACH:Color(L["Color"], nil, 46, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.r, E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.g, E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.b, 1, P.ElvUI_EltreumUI.skins.instances.MythicRaidColor.r, P.ElvUI_EltreumUI.skins.instances.MythicRaidColor.g, P.ElvUI_EltreumUI.skins.instances.MythicRaidColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.r, E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.g, E.db.ElvUI_EltreumUI.skins.instances.MythicRaidColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.MythicRaidText = E.Libs.ACH:Input(L["Raid (Mythic)"], L["The text displayed when in a mythic raid"], 47, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.MythicRaid end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.MythicRaid = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description17 = E.Libs.ACH:Description(" ", 48, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidTimewalkerColor = E.Libs.ACH:Color(L["Color"], nil, 49, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.b, 1, P.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.r, P.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.g, P.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.r, E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.g, E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalkerColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.RaidTimewalkerText = E.Libs.ACH:Input(L["Raid (Timewalking)"], L["The text displayed when in a timewalking raid"], 50, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalker end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.RaidTimewalker = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description18 = E.Libs.ACH:Description(" ", 51, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.GuildColor = E.Libs.ACH:Color(L["Color"], nil, 52, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.guildColor.r, E.db.ElvUI_EltreumUI.skins.instances.guildColor.g, E.db.ElvUI_EltreumUI.skins.instances.guildColor.b, 1, P.ElvUI_EltreumUI.skins.instances.guildColor.r, P.ElvUI_EltreumUI.skins.instances.guildColor.g, P.ElvUI_EltreumUI.skins.instances.guildColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.guildColor.r, E.db.ElvUI_EltreumUI.skins.instances.guildColor.g, E.db.ElvUI_EltreumUI.skins.instances.guildColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.GuildText = E.Libs.ACH:Input(L["Guild"], L["The text displayed when in a guild group"], 53, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.guild end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.guild = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description19 = E.Libs.ACH:Description(" ", 54, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.delveColor = E.Libs.ACH:Color(L["Color"], nil, 55, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.delveColor.r, E.db.ElvUI_EltreumUI.skins.instances.delveColor.g, E.db.ElvUI_EltreumUI.skins.instances.delveColor.b, 1, P.ElvUI_EltreumUI.skins.instances.delveColor.r, P.ElvUI_EltreumUI.skins.instances.delveColor.g, P.ElvUI_EltreumUI.skins.instances.delveColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.delveColor.r, E.db.ElvUI_EltreumUI.skins.instances.delveColor.g, E.db.ElvUI_EltreumUI.skins.instances.delveColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.delveText = E.Libs.ACH:Input(_G.DELVE_LABEL or "", L["The text displayed when in a delve"], 56, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.delve end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.delve = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.description20 = E.Libs.ACH:Description(" ", 57, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.questColor = E.Libs.ACH:Color(L["Color"], nil, 58, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.questColor.r, E.db.ElvUI_EltreumUI.skins.instances.questColor.g, E.db.ElvUI_EltreumUI.skins.instances.questColor.b, 1, P.ElvUI_EltreumUI.skins.instances.questColor.r, P.ElvUI_EltreumUI.skins.instances.questColor.g, P.ElvUI_EltreumUI.skins.instances.questColor.b, 1 end, function(_, r, g, b) E.db.ElvUI_EltreumUI.skins.instances.questColor.r, E.db.ElvUI_EltreumUI.skins.instances.questColor.g, E.db.ElvUI_EltreumUI.skins.instances.questColor.b = r, g, b end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable or E.db.ElvUI_EltreumUI.skins.instances.classcolor or not E.db.ElvUI_EltreumUI.skins.instances.difficultycolors) end, not E.Retail)
	ElvUI_EltreumUI.Options.args.party.args.instances.args.questText = E.Libs.ACH:Input(_G.QUESTS_LABEL or "", L["The text displayed when in a quest instance"], 59, false, nil, function() return E.db.ElvUI_EltreumUI.skins.instances.quest end, function(_, value) E.db.ElvUI_EltreumUI.skins.instances.quest = _G.tostring(value) E:StaticPopup_Show('PRIVATE_RL') end, function() return (not E.db.ElvUI_EltreumUI.skins.instances.enable) end, not E.Retail)
end
