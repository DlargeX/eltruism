local E, _, _, P = unpack(ElvUI)
local L = E.Libs.ACL:GetLocale('ElvUI', E.global.general.locale)
local _G = _G
local FrameStrataLevels = { BACKGROUND = 'BACKGROUND', LOW = 'LOW', MEDIUM = 'MEDIUM', HIGH = 'HIGH', DIALOG = 'DIALOG', TOOLTIP = 'TOOLTIP' }
local FrameLevels = { min = 1, max = 256, step = 0.1 }
local BorderOffsetSize = { min = -50, max = 3000, step = 0.1 }

-- Eltruism border options
function ElvUI_EltreumUI:BorderOptions()
	ElvUI_EltreumUI.Options.args.borders = E.Libs.ACH:Group(E:TextGradient(L["Borders"], 0.50, 0.70, 1, 0.67, 0.95, 1), L["Add Borders to frames and customize them"], 85, 'tab')
	ElvUI_EltreumUI.Options.args.borders.icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\border'
	ElvUI_EltreumUI.Options.args.borders.args.general = E.Libs.ACH:Group(L["General"], nil, 1)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.description1 = E.Libs.ACH:Description(L["Enable Borders"], 3, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 4, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.borders = value ElvUI_EltreumUI:ShowHideBorders() ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.enableautoadjust = E.Libs.ACH:Toggle(L["Enable Auto-adjusting the actionbar spacing and position"], L["Adjusts actionbar spacing and position based on borders being enabled or not"], 5, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust end,function(_, value) E.db.ElvUI_EltreumUI.borders.borderautoadjust = value ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.description2 = E.Libs.ACH:Description(L["Choose the Border Texture to be used:"], 6, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.bordertexture = E.Libs.ACH:SharedMediaBorder("", nil, 7, "full", function() return E.db.ElvUI_EltreumUI.borders.texture end, function(_,key) E.db.ElvUI_EltreumUI.borders.texture = key ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end,
	function()
		if E.db.ElvUI_EltreumUI.borders.universalborders then
			return false
		end
		return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders
	end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.classcolors = E.Libs.ACH:Toggle(L["Use Class Colors"], nil, 8, nil, false,nil,function() return E.db.ElvUI_EltreumUI.borders.classcolor end,function(_, value) E.db.ElvUI_EltreumUI.borders.classcolor = value ElvUI_EltreumUI:Borders() E:StaticPopup_Show('CONFIG_RL') end,function() return not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.colorborders = E.Libs.ACH:Color(L["Custom Color"], nil, 9, false, nil, function()
		local customcolorborders = E.db.ElvUI_EltreumUI.borders.bordercolors
		local d = P.ElvUI_EltreumUI.borders.bordercolors
		return customcolorborders.r, customcolorborders.g, customcolorborders.b, customcolorborders.a, d.r, d.g, d.b, d.a
	end,
		function(_, r, g, b)
			local customcolorborders = E.db.ElvUI_EltreumUI.borders.bordercolors
			customcolorborders.r, customcolorborders.g, customcolorborders.b = r, g, b E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders()
		end, function() return E.db.ElvUI_EltreumUI.borders.classcolor end)

	ElvUI_EltreumUI.Options.args.borders.args.general.args.descriptionuniversalborders = E.Libs.ACH:Description(L["TESTING: Universal Borders Customization:"], 20, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, nil, function() return not E.db.ElvUI_EltreumUI.borders.universalborders end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.universalbordersthickness = E.Libs.ACH:Range(L["Thickness"], nil, 21, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.universalborderssettings.thickness end, function(_, value) E.db.ElvUI_EltreumUI.borders.universalborderssettings.thickness = value end, nil, function() return not E.db.ElvUI_EltreumUI.borders.universalborders end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.universalbordersxoffset = E.Libs.ACH:Range(L["X offset"], nil, 22, { min = -200, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.universalborderssettings.xOffset end, function(_, value) E.db.ElvUI_EltreumUI.borders.universalborderssettings.xOffset = value end, nil, function() return not E.db.ElvUI_EltreumUI.borders.universalborders end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.universalbordersyoffset = E.Libs.ACH:Range(L["Y offset"], nil, 23, { min = -200, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.universalborderssettings.yOffset end, function(_, value) E.db.ElvUI_EltreumUI.borders.universalborderssettings.yOffset = value end, nil, function() return not E.db.ElvUI_EltreumUI.borders.universalborders end)
	ElvUI_EltreumUI.Options.args.borders.args.general.args.universalborderreload = E.Libs.ACH:Execute("Reload", nil, 24, function() ReloadUI() end, nil, false, nil, nil, nil, nil, function() return not E.db.ElvUI_EltreumUI.borders.universalborders end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders = E.Libs.ACH:Group(L["ActionBars"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.description0 = E.Libs.ACH:Group(L["(All settings require a reload)"], nil, 1)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.description0.inline = true
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.description0.args.description1 = E.Libs.ACH:Description(L["Change the size of the borders:"], 2)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.description0.args.ABsize = E.Libs.ACH:Range(L["Actionbar Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.baredgesize end, function(_, value) E.db.ElvUI_EltreumUI.borders.baredgesize = value ElvUI_EltreumUI:Borders() end, function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders or not E.private.actionbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1 = E.Libs.ACH:Group(L["Action Bar 1"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar1borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar1borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar1.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1.args.bar1xsize = E.Libs.ACH:Range(L["Bar 1 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar1xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar1xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar1.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1.args.bar1ysize = E.Libs.ACH:Range(L["Bar 1 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar1yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar1yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar1.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar1strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar1strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar1.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar1.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar1level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar1level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar1.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2 = E.Libs.ACH:Group(L["Action Bar 2"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar2borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar2borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar2.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2.args.bar2xsize = E.Libs.ACH:Range(L["Bar 2 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar2xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar2xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar2.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2.args.bar2ysize = E.Libs.ACH:Range(L["Bar 2 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar2yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar2yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar2.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar2strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar2strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar2.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar2.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar2level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar2level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar2.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3 = E.Libs.ACH:Group(L["Action Bar 3"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar3borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar3borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar3.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3.args.bar3xsize = E.Libs.ACH:Range(L["Bar 3 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar3xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar3xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar3.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3.args.bar3ysize = E.Libs.ACH:Range(L["Bar 3 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar3yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar3yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar3.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar3strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar3strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar3.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar3.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar3level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar3level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar3.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4 = E.Libs.ACH:Group(L["Action Bar 4"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar4borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar4borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar4.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4.args.bar4xsize = E.Libs.ACH:Range(L["Bar 4 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar4xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar4xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar4.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4.args.bar4ysize = E.Libs.ACH:Range(L["Bar 4 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar4yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar4yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar4.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar4strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar4strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar4.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar4.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar4level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar4level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar4.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5 = E.Libs.ACH:Group(L["Action Bar 5"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar5borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar5borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar5.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5.args.bar5xsize = E.Libs.ACH:Range(L["Bar 5 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar5xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar5xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar5.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5.args.bar5ysize = E.Libs.ACH:Range(L["Bar 5 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar5yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar5yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar5.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar5strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar5strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar5.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar5.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar5level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar5level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar5.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6 = E.Libs.ACH:Group(L["Action Bar 6"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bar6borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.bar6borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar6.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6.args.bar6xsize = E.Libs.ACH:Range(L["Bar 6 X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar6xborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar6xborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar6.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6.args.bar6ysize = E.Libs.ACH:Range(L["Bar 6 Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bar6yborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar6yborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar6.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bar6strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar6strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar6.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.actionbar6.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bar6level end, function(_, value) E.db.ElvUI_EltreumUI.borders.bar6level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.bar6.enabled end)
	--[[ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem = E.Libs.ACH:Group(L["Shaman Totem Bar"], nil, 2,"tab",nil,nil,nil,not E.M)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.totembar end,function(_, value) E.db.ElvUI_EltreumUI.borders.totembar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.bordertotemsize = E.Libs.ACH:Range(L["Shaman Totem Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.totemedgesize end, function(_, value) E.db.ElvUI_EltreumUI.borders.totemedgesize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.totemxsize = E.Libs.ACH:Range(L["Totem X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.totemxborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.totemxborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.totemysize = E.Libs.ACH:Range(L["Totem Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.totemyborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.totemyborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.totemstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.totemstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.totem.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.totemlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.totemlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.totemBar.enabled end)]]
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance = E.Libs.ACH:Group(L["Stance Bar"], nil, 2,"tab",nil,nil,nil)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.stanceborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.stanceborders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.borderstancesize = E.Libs.ACH:Range(L["Stance Bar Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.stanceedgesize end, function(_, value) E.db.ElvUI_EltreumUI.borders.stanceedgesize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.stancexsize = E.Libs.ACH:Range(L["Stance X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.stancexborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.stancexborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.stanceysize = E.Libs.ACH:Range(L["Stance Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.stanceyborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.stanceyborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.stancestrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.stancestrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.stance.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.stancelevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.stancelevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.stanceBar.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet = E.Libs.ACH:Group(L["Pet Action Bar"], nil, 2,"tab",nil,nil,nil)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.petactionborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.petactionborders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.borderpetabsize = E.Libs.ACH:Range(L["Pet Action Bar Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.petactionedgesize end, function(_, value) E.db.ElvUI_EltreumUI.borders.petactionedgesize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.petactionxsize = E.Libs.ACH:Range(L["Pet Action Bar X offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.petactionxborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.petactionxborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.petactionysize = E.Libs.ACH:Range(L["Pet Action Bar Y offset"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.petactionyborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.petactionyborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.petabstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.petabstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.actionbarsborders.args.pet.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.petablevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.petablevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.actionbar.barPet.enabled end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders = E.Libs.ACH:Group(L["Unitframes"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0 = E.Libs.ACH:Group(L["(All settings require a reload)"], nil, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0.inline = true
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0.args.description1 = E.Libs.ACH:Description(L["Change the size of the borders:"], 2)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0.args.borderUFsize = E.Libs.ACH:Range(L["Unitframe Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.playertargetsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.playertargetsize = value ElvUI_EltreumUI:Borders() end, function() return not E.private.unitframe.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0.args.bordergroupUFsize = E.Libs.ACH:Range(L["Group Unitframe Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.groupsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.groupsize = value ElvUI_EltreumUI:Borders() end, function() return not E.private.unitframe.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.description0.args.bordercastbarsize = E.Libs.ACH:Range(L["Castbar Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.playertargetcastsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.playertargetcastsize = value ElvUI_EltreumUI:Borders() end, function() return not E.private.unitframe.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player = E.Libs.ACH:Group(L["Player Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.playerborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.playerborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxplayer = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xplayer end, function(_, value) E.db.ElvUI_EltreumUI.borders.xplayer = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderyplayer = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yplayer end, function(_, value) E.db.ElvUI_EltreumUI.borders.yplayer = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playerframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.playerstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playerframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.playerlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.castbar = E.Libs.ACH:Description(L["Player Castbar Border"], 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.barcastplayer = E.Libs.ACH:Toggle(L["Enable"], nil, 6, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.playercastborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.playercastborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.castbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxcastplayer = E.Libs.ACH:Range(L["Border X offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xplayercast end, function(_, value) E.db.ElvUI_EltreumUI.borders.xplayercast = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.castbar.enable or not E.db.ElvUI_EltreumUI.borders.playercastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderycastplayer = E.Libs.ACH:Range(L["Border Y offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yplayercast end, function(_, value) E.db.ElvUI_EltreumUI.borders.yplayercast = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.castbar.enable or not E.db.ElvUI_EltreumUI.borders.playercastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playercastframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 8, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.playercaststrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.playercaststrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.castbar.enable or not E.db.ElvUI_EltreumUI.borders.playercastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playercastframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 9, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.playercastlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.playercastlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.castbar.enable or not E.db.ElvUI_EltreumUI.borders.playercastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.alternativeclassbar = E.Libs.ACH:Description(L["Alternative Power"] , 10, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.baralternativeclassbar = E.Libs.ACH:Toggle(L["Enable"], nil, 11, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.alternativeclassbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.alternativeclassbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxalternativeclassbar = E.Libs.ACH:Range(L["Border X offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.alternativeclassbarxborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.alternativeclassbarxborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.alternativeclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderyalternativeclassbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.alternativeclassbaryborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.alternativeclassbaryborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.alternativeclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.alternativeclassbarframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 13, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.alternativeclassbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.alternativeclassbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.alternativeclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.alternativeclassbarframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 14, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.alternativeclassbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.alternativeclassbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.alternativeclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.staggerclassbar = E.Libs.ACH:Description(_G.STAGGER or "", 15, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, nil, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.barstaggerclassbar = E.Libs.ACH:Toggle(L["Enable"], nil, 16, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.staggerclassbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.staggerclassbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable end, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxstaggerclassbar = E.Libs.ACH:Range(L["Border X offset"], nil, 17, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.staggerclassbarxborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.staggerclassbarxborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.staggerclassbar end, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderystaggerclassbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 17, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.staggerclassbaryborder end, function(_, value) E.db.ElvUI_EltreumUI.borders.staggerclassbaryborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.staggerclassbar end, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.staggerclassbarframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 18, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.staggerclassbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.staggerclassbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.staggerclassbar end, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.staggerclassbarframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 19, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.staggerclassbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.staggerclassbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.staggerclassbar end, not E.Retail)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.comboclassbar = E.Libs.ACH:Description(_G.TUTORIAL_TITLE61_ROGUE or "", 20, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.barcomboclassbar = E.Libs.ACH:Toggle(L["Enable"], nil, 21, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.comboclassbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.comboclassbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxcomboclassbar = E.Libs.ACH:Range(L["Border X offset"], nil, 22, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.combosizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.combosizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.comboclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderycomboclassbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 22, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.combosizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.combosizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.comboclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.comboclassbarframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 23, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.combostrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.combostrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.comboclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.comboclassbarframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 24, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.combolevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.combolevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.classbar.enable or not E.db.ElvUI_EltreumUI.borders.comboclassbar end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playerpower = E.Libs.ACH:Description(L["Power"], 25, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.barplayerpower = E.Libs.ACH:Toggle(L["Enable"], nil, 26, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.playerpower end,function(_, value) E.db.ElvUI_EltreumUI.borders.playerpower = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.power.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderxplayerpower = E.Libs.ACH:Range(L["Border X offset"], nil, 27, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.playerpowersizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerpowersizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.power.enable or not E.db.ElvUI_EltreumUI.borders.playerpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.borderyplayerpower = E.Libs.ACH:Range(L["Border Y offset"], nil, 27, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.playerpowersizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerpowersizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.power.enable or not E.db.ElvUI_EltreumUI.borders.playerpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playerpowerframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 28, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.playerpowerstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerpowerstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.power.enable or not E.db.ElvUI_EltreumUI.borders.playerpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.player.args.playerpowerframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 29, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.playerpowerlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.playerpowerlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.player.power.enable or not E.db.ElvUI_EltreumUI.borders.playerpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target = E.Libs.ACH:Group(L["Target Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.targetborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.targetborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderxtarget = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xtarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.xtarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderytarget = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.ytarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.ytarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.targetstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.targetlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.castbar = E.Libs.ACH:Description(L["Target Castbar Border"], 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.barcasttarget = E.Libs.ACH:Toggle(L["Enable"], nil, 6, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.targetcastborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.targetcastborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.castbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderxcasttarget = E.Libs.ACH:Range(L["Border X offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xcasttarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.xcasttarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.castbar.enable or not E.db.ElvUI_EltreumUI.borders.targetcastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderycasttarget = E.Libs.ACH:Range(L["Border Y offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.ycasttarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.ycasttarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.castbar.enable or not E.db.ElvUI_EltreumUI.borders.targetcastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetcastframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 8, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.targetcaststrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetcaststrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.castbar.enable or not E.db.ElvUI_EltreumUI.borders.targetcastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetcastframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 9, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.targetcastlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetcastlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.castbar.enable or not E.db.ElvUI_EltreumUI.borders.targetcastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetpower = E.Libs.ACH:Description(L["Power"], 10, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.bartargetpower = E.Libs.ACH:Toggle(L["Enable"], nil, 11, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.targetpower end,function(_, value) E.db.ElvUI_EltreumUI.borders.targetpower = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.power.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderxtargetpower = E.Libs.ACH:Range(L["Border X offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.targetpowersizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetpowersizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.power.enable or not E.db.ElvUI_EltreumUI.borders.targetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.borderytargetpower = E.Libs.ACH:Range(L["Border Y offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.targetpowersizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetpowersizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.power.enable or not E.db.ElvUI_EltreumUI.borders.targetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetpowerframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 13, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.targetpowerstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetpowerstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.power.enable or not E.db.ElvUI_EltreumUI.borders.targetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.target.args.targetpowerframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 14, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.targetpowerlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.targetpowerlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.target.power.enable or not E.db.ElvUI_EltreumUI.borders.targetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget = E.Libs.ACH:Group(L["Target of Target Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.targettargetborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.borderxtargettarget = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xtargettarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.xtargettarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.borderytargettarget = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.ytargettarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.ytargettarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.targettargetframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.targettargetstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.targettargetframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.targettargetlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.targettargetpower = E.Libs.ACH:Description(L["Power"], 10, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.bartargettargetpower = E.Libs.ACH:Toggle(L["Enable"], nil, 11, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.targettargetpower end,function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetpower = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.power.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.borderxtargettargetpower = E.Libs.ACH:Range(L["Border X offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.targettargetpowersizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetpowersizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.power.enable or not E.db.ElvUI_EltreumUI.borders.targettargetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.borderytargettargetpower = E.Libs.ACH:Range(L["Border Y offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.targettargetpowersizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetpowersizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.power.enable or not E.db.ElvUI_EltreumUI.borders.targettargetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.targettargetpowerframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 13, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.targettargetpowerstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetpowerstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.power.enable or not E.db.ElvUI_EltreumUI.borders.targettargetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.targettarget.args.targettargetpowerframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 14, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.targettargetpowerlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.targettargetpowerlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.targettarget.power.enable or not E.db.ElvUI_EltreumUI.borders.targettargetpower end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party = E.Libs.ACH:Group(L["Party Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.partyborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.partyborders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.party.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party.args.borderxparty = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.partysizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.partysizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.party.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party.args.borderyparty = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.partysizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.partysizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.party.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party.args.partyframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.partystrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.partystrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.party.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.party.args.partyframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.partylevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.partylevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.party.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1 = E.Libs.ACH:Group(L["Raid1 Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.raidborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.raidborders = value ElvUI_EltreumUI:Borders() end, function() return (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.db.unitframe.units.raid1.enable) or (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.private.unitframe.disabledBlizzardFrames.raid) end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1.args.borderxraid1 = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raidsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.raidsizex = value ElvUI_EltreumUI:Borders() end, function() return (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.db.unitframe.units.raid1.enable) or (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.private.unitframe.disabledBlizzardFrames.raid) end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1.args.borderyraid1 = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raidsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.raidsizey = value ElvUI_EltreumUI:Borders() end, function() return (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.db.unitframe.units.raid1.enable) or (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.private.unitframe.disabledBlizzardFrames.raid) end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1.args.raid1frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.raidstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.raidstrata = value ElvUI_EltreumUI:Borders() end, function() return (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.db.unitframe.units.raid1.enable) or (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.private.unitframe.disabledBlizzardFrames.raid) end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid1.args.raid1frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.raidlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.raidlevel = value ElvUI_EltreumUI:Borders() end, function() return (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.db.unitframe.units.raid1.enable) or (not E.db.ElvUI_EltreumUI.borders.raidborders and not E.private.unitframe.disabledBlizzardFrames.raid) end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2 = E.Libs.ACH:Group(L["Raid2 Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.raid2borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.raid2borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid2.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2.args.borderxraid2 = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raid2sizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid2sizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid2.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2.args.borderyraid2 = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raid2sizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid2sizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid2.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2.args.raid2frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.raid2strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid2strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid2.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid2.args.raid2frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.raid2level end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid2level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid2.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3 = E.Libs.ACH:Group(L["Raid3 Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.raid40borders end,function(_, value) E.db.ElvUI_EltreumUI.borders.raid40borders = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid3.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3.args.borderxraid3 = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raid40sizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid40sizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid3.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3.args.borderyraid3 = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.raid40sizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid40sizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid3.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3.args.raid3frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.raid40strata end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid40strata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid3.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.raid3.args.raid3frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.raid40level end, function(_, value) E.db.ElvUI_EltreumUI.borders.raid40level = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.raid3.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus = E.Libs.ACH:Group(L["Focus Border"], nil, 2,"tab", nil, nil, nil, E.Classic)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.focusborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.focusborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderfocus = E.Libs.ACH:Range(L["Focus Thickness"], nil, 1, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.focussize end, function(_, value) E.db.ElvUI_EltreumUI.borders.focussize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderxfocus = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xfocus end, function(_, value) E.db.ElvUI_EltreumUI.borders.xfocus = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderyfocus = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yfocus end, function(_, value) E.db.ElvUI_EltreumUI.borders.yfocus = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focusframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.focusstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.focusstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focusframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.focuslevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.focuslevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.castbar = E.Libs.ACH:Description(L["Focus Castbar Border"], 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.barcastfocus = E.Libs.ACH:Toggle(L["Enable"], nil, 6, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.focuscastborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.focuscastborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.castbar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderxcastfocus = E.Libs.ACH:Range(L["Border X offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xcastfocus end, function(_, value) E.db.ElvUI_EltreumUI.borders.xcastfocus = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.castbar.enable or not E.db.ElvUI_EltreumUI.borders.focuscastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderycastfocus = E.Libs.ACH:Range(L["Border Y offset"], nil, 7, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.ycastfocus end, function(_, value) E.db.ElvUI_EltreumUI.borders.ycastfocus = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.castbar.enable or not E.db.ElvUI_EltreumUI.borders.focuscastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focuscastframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 8, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.focuscaststrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.focuscaststrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.castbar.enable or not E.db.ElvUI_EltreumUI.borders.focuscastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focuscastframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 9, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.focuscastlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.focuscastlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.castbar.enable or not E.db.ElvUI_EltreumUI.borders.focuscastborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.powerbar = E.Libs.ACH:Description(L["Focus Power Border"], 10, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.powerbarfocus = E.Libs.ACH:Toggle(L["Enable"], nil, 11, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.focuspowerborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.focuspowerborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.power.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderxpowerbar = E.Libs.ACH:Range(L["Border X offset"], nil, 12, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xfocuspower end, function(_, value) E.db.ElvUI_EltreumUI.borders.xfocuspower = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.power.enable or not E.db.ElvUI_EltreumUI.borders.focuspowerborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.borderypowerbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 13, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yfocuspower end, function(_, value) E.db.ElvUI_EltreumUI.borders.yfocuspower = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.power.enable or not E.db.ElvUI_EltreumUI.borders.focuspowerborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focuspowerbarframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 14, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.focuspowerstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.focuspowerstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.power.enable or not E.db.ElvUI_EltreumUI.borders.focuspowerborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focus.args.focuspowerbarframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 15, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.focuspowerlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.focuspowerlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focus.power.enable or not E.db.ElvUI_EltreumUI.borders.focuspowerborder end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget = E.Libs.ACH:Group(L["Focus Target Border"], nil, 2,"tab", nil, nil, nil, E.Classic)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.focustargetborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.focustargetborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.borderfocustarget = E.Libs.ACH:Range(L["Focus Thickness"], nil, 1, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.focussize end, function(_, value) E.db.ElvUI_EltreumUI.borders.focussize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.borderxfocustarget = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xfocustarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.xfocustarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.borderyfocustarget = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yfocustarget end, function(_, value) E.db.ElvUI_EltreumUI.borders.yfocustarget = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.focustargetframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.focustargetstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.focustargetstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.focustarget.args.focustargetframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.focustargetlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.focustargetlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.focustarget.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss = E.Libs.ACH:Group(L["Boss Border"], nil, 2,"tab", nil, nil, nil, E.Classic)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.bossborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.bossborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.borderboss = E.Libs.ACH:Range(L["Boss Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.bosssize end, function(_, value) E.db.ElvUI_EltreumUI.borders.bosssize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.borderxboss = E.Libs.ACH:Range(L["Border X offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xboss end, function(_, value) E.db.ElvUI_EltreumUI.borders.xboss = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.borderyboss = E.Libs.ACH:Range(L["Border Y offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yboss end, function(_, value) E.db.ElvUI_EltreumUI.borders.yboss = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.bossframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 4, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.bossstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.bossstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.boss.args.bossframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 5, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.bosslevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.bosslevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.boss.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet = E.Libs.ACH:Group(L["Pet Border"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.petborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.petborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.borderpet = E.Libs.ACH:Range(L["Pet Thickness"], nil, 1, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.petsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.petsize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.borderxpet = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.petsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.petsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.borderypet = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.petsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.petsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.petframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.petstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.petstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.pet.args.petframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.petlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.petlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.pet.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist = E.Libs.ACH:Group(L["Assist"].." / "..L["Tank"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.tankassistborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.tankassistborders = value ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.bordertankassist = E.Libs.ACH:Range(L["Thickness"], nil, 1, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.tankassistsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.tankassistsize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.tankassistborders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.borderxtankassist = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.tankassistsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.tankassistsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.tankassistborders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.borderytankassist = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.tankassistsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.tankassistsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.tankassistborders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.tankassistframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.tankassiststrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.tankassiststrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.tankassistborders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.tankassist.args.tankassistframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.tankassistlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.tankassistlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.tankassistborders end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena = E.Libs.ACH:Group(E.NewSign..L["Arena Border"], nil, 2,"tab", nil, nil, nil, E.Classic)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.arenaborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.arenaborder = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.borderarena = E.Libs.ACH:Range(L["Arena Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.arenasize end, function(_, value) E.db.ElvUI_EltreumUI.borders.arenasize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.borderxarena = E.Libs.ACH:Range(L["Border X offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xarena end, function(_, value) E.db.ElvUI_EltreumUI.borders.xarena = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.borderyarena = E.Libs.ACH:Range(L["Border Y offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.yarena end, function(_, value) E.db.ElvUI_EltreumUI.borders.yarena = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.arenaframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 4, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.arenastrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.arenastrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.unitframeborders.args.arena.args.arenaframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 5, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.arenalevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.arenalevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.unitframe.units.arena.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders = E.Libs.ACH:Group(L["Nameplate"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbar = E.Libs.ACH:Description(L["Nameplate Health Bar Border"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarenable = E.Libs.ACH:Toggle(L["Enable"], nil, 2, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.nameplateborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.nameplateborders = value end, function() return not E.private.nameplates.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarpowerbarsize = E.Libs.ACH:Range(L["Nameplate Health Bar Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.nameplatesize end, function(_, value) E.db.ElvUI_EltreumUI.borders.nameplatesize = value end, function() return not E.db.ElvUI_EltreumUI.borders.nameplateborders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarxpowerbar = E.Libs.ACH:Range(L["Border X offset"], nil, 4, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.nameplatesizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.nameplatesizex = value end, function() return not E.db.ElvUI_EltreumUI.borders.nameplateborders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarypowerbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 4, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.nameplatesizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.nameplatesizey = value end, function() return not E.db.ElvUI_EltreumUI.borders.nameplateborders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 5, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.nameplatestrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.nameplatestrata = value end, function() return not E.db.ElvUI_EltreumUI.borders.nameplateborders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.healthbarframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 6, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.nameplatelevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.nameplatelevel = value end, function() return not E.db.ElvUI_EltreumUI.borders.nameplateborders end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.powerbar = E.Libs.ACH:Description(L["Nameplate Power Bar Border"], 11, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 12, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.powerbarborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarborder = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.borderpowerbarsize = E.Libs.ACH:Range(L["Nameplate Power Bar Thickness"], nil, 13, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.powerbarsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarsize = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.borderxpowerbar = E.Libs.ACH:Range(L["Border X offset"], nil, 14, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.xpowerbar end, function(_, value) E.db.ElvUI_EltreumUI.borders.xpowerbar = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.borderypowerbar = E.Libs.ACH:Range(L["Border Y offset"], nil, 14, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.ypowerbar end, function(_, value) E.db.ElvUI_EltreumUI.borders.ypowerbar = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 15, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.powerbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.nameplateborders.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 16, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.powerbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.powerbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.private.ElvUI_EltreumUI.nameplatepower end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder = E.Libs.ACH:Group(L["Other"], nil, 4, "tab",nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap = E.Libs.ACH:Group(_G.MINIMAP_LABEL, nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.enable = E.Libs.ACH:Toggle(L["Enable"].." ".._G.MINIMAP_LABEL, nil, 3, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.minimapborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.minimapborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.description1 = E.Libs.ACH:Description(L["Change the size of the borders:"], 4, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.borderthickness = E.Libs.ACH:Range(L["Minimap Thickness"], nil, 5, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.minimapsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.minimapborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.borderxminimap = E.Libs.ACH:Range(_G.MINIMAP_LABEL.." "..L["Border X offset"], nil, 6, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.minimapsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.minimapborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.borderyminimap = E.Libs.ACH:Range(_G.MINIMAP_LABEL.." "..L["Border Y offset"], nil, 6, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.minimapsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.minimapsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.minimapborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.frameStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 7, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.minimapstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.minimapstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.minimapborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.minimap.args.frameLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 8, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.minimaplevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.minimaplevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.minimapborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura = E.Libs.ACH:Group(_G.AURAS, nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.enable = E.Libs.ACH:Toggle(L["Enable"].." ".._G.AURAS, nil, 3, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.auraborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.auraborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.borderthickness = E.Libs.ACH:Range(L["Aura Thickness"], nil, 5, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.aurasize end, function(_, value) E.db.ElvUI_EltreumUI.borders.aurasize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.borderxauras = E.Libs.ACH:Range(L["Aura Border X offset"], nil, 6, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.aurasizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.aurasizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.borderyauras = E.Libs.ACH:Range(L["Aura Border Y offset"], nil, 6, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.aurasizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.aurasizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.borderxaurasdebuff = E.Libs.ACH:Range(L["Debuff Aura Border X offset"], nil, 7, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.debuffaurasizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.debuffaurasizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.borderyaurasdebuff = E.Libs.ACH:Range(L["Debuff Aura Border Y offset"], nil, 7, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.debuffaurasizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.debuffaurasizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.auraframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 8, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.aurastrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.aurastrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.aura.args.auraframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 9, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.auralevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.auralevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura = E.Libs.ACH:Group(L["Unitframe Auras"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.enable = E.Libs.ACH:Toggle(L["Enable Unitframe Auras"], nil, 3, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.auraborderuf end,function(_, value) E.db.ElvUI_EltreumUI.borders.auraborderuf = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.borderthickness = E.Libs.ACH:Range(L["Aura Thickness"], nil, 5, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.ufaurasize end, function(_, value) E.db.ElvUI_EltreumUI.borders.ufaurasize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.borderxauras = E.Libs.ACH:Range(L["Unitframe Aura Border X offset"], nil, 6, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.ufbuffsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.ufbuffsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.borderyauras = E.Libs.ACH:Range(L["Unitframe Aura Border Y offset"], nil, 6, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.ufbuffsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.ufbuffsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.borderxaurasdebuff = E.Libs.ACH:Range(L["Unitframes Debuff Aura Border X offset"], nil, 7, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.ufdebuffsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.ufdebuffsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.borderyaurasdebuff = E.Libs.ACH:Range(L["Unitframes Debuff Aura Border Y offset"], nil, 7, { min = 1, max = 100, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.ufdebuffsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.ufdebuffsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.auraufframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 8, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.auraufstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.auraufstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.ufaura.args.auraufframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 9, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.aurauflevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.aurauflevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.auraborderuf end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat = E.Libs.ACH:Group(_G.BINDING_HEADER_CHAT, nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.enable = E.Libs.ACH:Toggle(L["Enable"].." ".._G.BINDING_HEADER_CHAT, nil, 3, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.chatborder end,function(_, value) E.db.ElvUI_EltreumUI.borders.chatborder = value E:StaticPopup_Show('CONFIG_RL') ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.borderthickness = E.Libs.ACH:Range(L["Chat Thickness"], nil, 5, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.chatsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.chatsize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.leftchatx = E.Libs.ACH:Range(L["Left Chat Border X offset"], nil, 6, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.leftchatborderx end, function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatborderx = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.leftchaty = E.Libs.ACH:Range(L["Left Chat Border Y offset"], nil, 6, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.leftchatbordery end, function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatbordery = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.leftchatframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 7, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.leftchatstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.leftchatframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 8, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.leftchatlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.leftchatlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.rightchatx = E.Libs.ACH:Range(L["Right Chat Border X offset"], nil, 9, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.rightchatborderx end, function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatborderx = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.rightchaty = E.Libs.ACH:Range(L["Right Chat Border Y offset"], nil, 10, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.rightchatbordery end, function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatbordery = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.rightchatframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 11, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.rightchatstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.chat.args.rightchatframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 12, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.rightchatlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.rightchatlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.ElvUI_EltreumUI.borders.chatborder end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders = E.Libs.ACH:Group(L["DataBars"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.description0 = E.Libs.ACH:Group(L["(All settings require a reload)"], nil, 1)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.description0.inline = true
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.description0.args.description1 = E.Libs.ACH:Description(L["Change the size of the borders:"], 2)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.description0.args.borderdatabarsize = E.Libs.ACH:Range(L["Databars Thickness"], nil, 3, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.databarsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.databarsize = value ElvUI_EltreumUI:Borders() end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience = E.Libs.ACH:Group(L["Experience"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.experiencebar end,function(_, value) E.db.ElvUI_EltreumUI.borders.experiencebar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.experience.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience.args.borderexperiencex = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.experiencebarsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.experiencebarsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.experience.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience.args.borderexperiencey = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.experiencebarsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.experiencebarsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.experience.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience.args.experienceframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.experiencebarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.experiencebarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.experience.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.experience.args.experienceframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.experiencebarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.experiencebarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.experience.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation = E.Libs.ACH:Group(L["Reputation"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.reputationbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.reputationbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.reputation.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation.args.borderreputationx = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.reputationbarsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.reputationbarsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.reputation.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation.args.borderreputationy = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.reputationbarsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.reputationbarsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.reputation.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation.args.reputationframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.reputationbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.reputationbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.reputation.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.reputation.args.reputationframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.reputationbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.reputationbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.reputation.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat = E.Libs.ACH:Group(L["Threat"], nil, 2,"tab")
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.threatbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.threatbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.threat.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat.args.borderthreatx = E.Libs.ACH:Range(L["Border X offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.threatbarsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.threatbarsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.threat.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat.args.borderthreaty = E.Libs.ACH:Range(L["Border Y offset"], nil, 2, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.threatbarsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.threatbarsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.threat.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat.args.threatframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 3, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.threatbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.threatbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.threat.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.databarsborders.args.threat.args.threatframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 4, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.threatbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.threatbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.databars.threat.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower = E.Libs.ACH:Group(L["Alternative Power"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.altpowerbar end,function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbar = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.borderthickness = E.Libs.ACH:Range(L["Alternative Power Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.altpowerbarsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbarsize = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.borderaltpowerx = E.Libs.ACH:Range(L["Border X offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.altpowerbarsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbarsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.borderaltpowery = E.Libs.ACH:Range(L["Border Y offset"], nil, 3, BorderOffsetSize, "full", function() return E.db.ElvUI_EltreumUI.borders.altpowerbarsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbarsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.altpowerframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 4, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.altpowerbarstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbarstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.altpower.args.altpowerframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 5, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.altpowerbarlevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.altpowerbarlevel = value ElvUI_EltreumUI:Borders() end, function() return not E.db.general.altPowerBar.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip = E.Libs.ACH:Group(E.NewSign..L["Tooltip"], nil, 2, nil,nil,nil,function() return E.db.ElvUI_EltreumUI.borders.borderautoadjust or not E.db.ElvUI_EltreumUI.borders.borders end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.enable = E.Libs.ACH:Toggle(L["Enable"], nil, 1, nil, false,"full",function() return E.db.ElvUI_EltreumUI.borders.tooltipborders end,function(_, value) E.db.ElvUI_EltreumUI.borders.tooltipborders = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.tooltipthickness = E.Libs.ACH:Range(L["Thickness"], nil, 2, { min = 1, max = 200, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.tooltipsize end, function(_, value) E.db.ElvUI_EltreumUI.borders.tooltipsize = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.tooltipx = E.Libs.ACH:Range(L["Border X offset"], nil, 3, { min = -300, max = 300, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.tooltipsizex end, function(_, value) E.db.ElvUI_EltreumUI.borders.tooltipsizex = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.tooltipy = E.Libs.ACH:Range(L["Border Y offset"], nil, 3, { min = -300, max = 300, step = 0.1 }, "full", function() return E.db.ElvUI_EltreumUI.borders.tooltipsizey end, function(_, value) E.db.ElvUI_EltreumUI.borders.tooltipsizey = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.tooltipframeStrata = E.Libs.ACH:Select(L["Frame Strata"], nil, 4, FrameStrataLevels, false, "full",function() return E.db.ElvUI_EltreumUI.borders.tooltipstrata end, function(_, value) E.db.ElvUI_EltreumUI.borders.tooltipstrata = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
	ElvUI_EltreumUI.Options.args.borders.args.otherborder.args.tooltip.args.tooltipframeLevel = E.Libs.ACH:Range(L["Frame Level"], nil, 5, FrameLevels, "full", function() return E.db.ElvUI_EltreumUI.borders.tooltiplevel end, function(_, value) E.db.ElvUI_EltreumUI.borders.tooltiplevel = value ElvUI_EltreumUI:Borders() end, function() return not E.private.tooltip.enable end)
end
