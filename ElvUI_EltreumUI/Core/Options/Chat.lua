local E = unpack(ElvUI)
local L = E.Libs.ACL:GetLocale('ElvUI', E.global.general.locale)
local _G = _G

-- Eltruism chat options
function ElvUI_EltreumUI:ChatOptions()
	ElvUI_EltreumUI.Options.args.chat = E.Libs.ACH:Group(E:TextGradient(_G.CHAT_LABEL or "Chat", 0.50, 0.70, 1, 0.67, 0.95, 1), L["Enhance Chat Functionality"], 85, 'tab')
	ElvUI_EltreumUI.Options.args.chat.icon = 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Icons\\chat'
	ElvUI_EltreumUI.Options.args.chat.args.enablechatmods = E.Libs.ACH:Toggle(L["Enable ElvUI Chat modifications"], L["Enable adding more functions to ElvUI Chat"], 1, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.enable end,function(_, value) E.db.ElvUI_EltreumUI.chat.enable = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.general = E.Libs.ACH:Group(L["General"], nil, 2)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description1 = E.Libs.ACH:Description(L["Author, MVP and Donator Icons"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.authoricons = E.Libs.ACH:Toggle(L["Enable Showing Author, Donator and MVP Chat Icons"], L["Toggle the option on"], 2, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.AuthorMVPDonatorIcons end,function(_, value) E.db.ElvUI_EltreumUI.chat.AuthorMVPDonatorIcons = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description2 = E.Libs.ACH:Description(L["Force ElvUI Chat Toggles"], 3, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.elvuichattoggles = E.Libs.ACH:Toggle(L["Enable Always Forcing ElvUI Chat Toggles On"], L["Toggle the option on"], 4, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.chattoggles end,function(_, value) E.db.ElvUI_EltreumUI.chat.chattoggles = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description3 = E.Libs.ACH:Description(L["!key Chat Command"], 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full", not E.Retail)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.keys = E.Libs.ACH:Toggle(L["Enable !key and !keys chat command"], L["Will link your key in guild or party chat"], 6, nil, false,'full', function() return E.db.ElvUI_EltreumUI.otherstuff.mpluskeys end,function(_, value) E.db.ElvUI_EltreumUI.otherstuff.mpluskeys = value E:StaticPopup_Show('CONFIG_RL') end, nil, not E.Retail)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description4 = E.Libs.ACH:Description(L["Enhance Item Links in Chat"], 7, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.chatlooticons = E.Libs.ACH:Toggle(L["Enable Chat Icons"], L["Toggle the option on"], 8, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.looticons end,function(_, value) E.db.ElvUI_EltreumUI.chat.looticons = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.chatitemlevels = E.Libs.ACH:Toggle(L["Enable Item Levels"], L["Toggle the option on"], 9, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.itemlevels end,function(_, value) E.db.ElvUI_EltreumUI.chat.itemlevels = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.chat.enable or not E.db.ElvUI_EltreumUI.chat.looticons end)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description5 = E.Libs.ACH:Description(E.NewSign..L["Add Character Race Icons"], 10, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.chatraceicons = E.Libs.ACH:Toggle(L["Enable Character Race Icons"], L["Toggle the option on"], 11, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.chatraceicon end,function(_, value) E.db.ElvUI_EltreumUI.chat.chatraceicon = value E:StaticPopup_Show('CONFIG_RL') end, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.general.args.description6 = E.Libs.ACH:Description(L["Customize the Chat tabs"], 40, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.darkchat = E.Libs.ACH:Execute(L["Dark Chat"], nil, 41, function() ElvUI_EltreumUI:DarkChat() E:StaticPopup_Show('CONFIG_RL') end,nil,false, "full")
	ElvUI_EltreumUI.Options.args.chat.args.general.args.lightchat = E.Libs.ACH:Execute(L["Transparent Chat"], nil, 41, function() ElvUI_EltreumUI:TransparentChat() E:StaticPopup_Show('CONFIG_RL') end,nil,false, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade = E.Libs.ACH:Group(L["Fade"], nil, 3, "tab", nil, nil, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.description1 = E.Libs.ACH:Description(L["Add mouse over to the left chat panel"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.leftmouseover = E.Libs.ACH:Toggle(L["Left Chat Mouse Over"], L["Toggle the option"], 2, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.leftmouseover end,function(_, value) E.db.ElvUI_EltreumUI.chat.leftmouseover = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.description2 = E.Libs.ACH:Description(L["Add a fade to the left chat panel, controlled by ElvUI Chat > Text Fade > Inactivity Timer"], 3, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.leftfade = E.Libs.ACH:Toggle(L["Left Inactivity Fader"], L["Toggle the option"], 4, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.leftfader end,function(_, value) E.db.ElvUI_EltreumUI.chat.leftfader = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.description3 = E.Libs.ACH:Description(L["Add mouse over to the right chat panel"], 5, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.rightmouseover = E.Libs.ACH:Toggle(L["Right Chat Mouse Over"], L["Toggle the option"], 6, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.rightmouseover end,function(_, value) E.db.ElvUI_EltreumUI.chat.rightmouseover = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.description4 = E.Libs.ACH:Description(L["Add a fade to the right chat panel, controlled by ElvUI Chat > Text Fade > Inactivity Timer"], 7, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.rightfade = E.Libs.ACH:Toggle(L["Right Inactivity Fader"], L["Toggle the option"], 8, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.rightfader end,function(_, value) E.db.ElvUI_EltreumUI.chat.rightfader = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.description5 = E.Libs.ACH:Description(L["Invert left mouse click so that chat starts faded and mouse click will make it stop fading"], 9, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.fade.args.invertmouse = E.Libs.ACH:Toggle(L["Invert Mouse Click"], L["Toggle the option on"], 10, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.invertclick end,function(_, value) E.db.ElvUI_EltreumUI.chat.invertclick = value E:StaticPopup_Show('CONFIG_RL') end)
	ElvUI_EltreumUI.Options.args.chat.args.combathide = E.Libs.ACH:Group(L["Combat Hide"], nil, 3, "tab", nil, nil, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.combathide.args.description1 = E.Libs.ACH:Description(L["Combat Hide"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.combathide.args.leftcombathide = E.Libs.ACH:Toggle(L["Hide Left Chat in Combat"], L["Toggle the option"], 2, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.leftcombathide end,function(_, value) E.db.ElvUI_EltreumUI.chat.leftcombathide = value E:StaticPopup_Show('CONFIG_RL') end, function() return E.db.ElvUI_EltreumUI.chat.leftbosshide or not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.combathide.args.leftbosshide = E.Libs.ACH:Toggle(L["Hide Left Chat in Boss Encounters"], L["Toggle the option"], 3, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.leftbosshide end,function(_, value) E.db.ElvUI_EltreumUI.chat.leftbosshide = value E:StaticPopup_Show('CONFIG_RL') end, function() return E.db.ElvUI_EltreumUI.chat.leftcombathide or not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.combathide.args.rightcombathide = E.Libs.ACH:Toggle(L["Hide Right Chat in Combat"], L["Toggle the option"], 4, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.rightcombathide end,function(_, value) E.db.ElvUI_EltreumUI.chat.rightcombathide = value E:StaticPopup_Show('CONFIG_RL') end, function() return E.db.ElvUI_EltreumUI.chat.rightbosshide or not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.combathide.args.rightbosshide = E.Libs.ACH:Toggle(L["Hide Right Chat in Boss Encounters"], L["Toggle the option"], 5, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.rightbosshide end,function(_, value) E.db.ElvUI_EltreumUI.chat.rightbosshide = value E:StaticPopup_Show('CONFIG_RL') end, function() return E.db.ElvUI_EltreumUI.chat.rightcombathide or not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.color = E.Libs.ACH:Group(L["Color"], nil, 3, "tab", nil, nil, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.color.args.description1 = E.Libs.ACH:Description(L["Add color to some chat messages"], 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.color.args.colorsysmsgs = E.Libs.ACH:Toggle(L["Enable on System Messages"], L["Toggle the option on"], 2, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.colorsysmsg end,function(_, value) E.db.ElvUI_EltreumUI.chat.colorsysmsg = value end)
	ElvUI_EltreumUI.Options.args.chat.args.color.args.gradientnames = E.Libs.ACH:Toggle(L["Add Gradient to Names"], L["Player names in chat will have a class gradient"], 3, nil, false,'full', function() return E.db.ElvUI_EltreumUI.chat.chatgradient end,function(_, value) E.db.ElvUI_EltreumUI.chat.chatgradient = value end)
	ElvUI_EltreumUI.Options.args.chat.args.color.args.classcolormsgs = E.Libs.ACH:Toggle(L["Enable on Chat Messages"], L["Toggle the option on"], 4, nil, false,"double", function() return E.db.ElvUI_EltreumUI.chat.classcolorchat end,function(_, value) E.db.ElvUI_EltreumUI.chat.classcolorchat = value end)
	ElvUI_EltreumUI.Options.args.chat.args.color.args.classcolormsgscustom = E.Libs.ACH:Toggle(L["Custom Color"], L["Toggle the option on"], 5, nil, false,nil, function() return E.db.ElvUI_EltreumUI.chat.classcolorchatcustom end,function(_, value) E.db.ElvUI_EltreumUI.chat.classcolorchatcustom = value end, function() return not E.db.ElvUI_EltreumUI.chat.classcolorchat end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons = E.Libs.ACH:Group(L["Class Icons"], nil, 3, "tab", nil, nil, function() return not E.db.ElvUI_EltreumUI.chat.enable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.description1 = E.Libs.ACH:Description(" ", 1, nil, 'Interface\\AddOns\\ElvUI_EltreumUI\\Media\\Textures\\EltreumHeader', nil, 3240, 1, "full")
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.enable = E.Libs.ACH:Toggle(L["Add Class Icons in Chat messages"], L["Player names in chat will have a class icon next to their name"], 2, nil, false,"full", function() return E.db.ElvUI_EltreumUI.chat.chaticonenable end,function(_, value) E.db.ElvUI_EltreumUI.chat.chaticonenable = value end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.classicons = E.Libs.ACH:Select(L["Class Icons"], nil, 3, {
		["RELEAF"] = "Releaf "..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightReleaf',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterReleaf',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanReleaf',':20:20'),
		["BLIZZARD"] = 'Blizzard '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnight',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\Hunter',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\Shaman',':20:20'),
		["BORDER"] = 'Border '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightIconReleaf',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterIconReleaf',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanIconReleaf',':20:20'),
		["SHADOW"] = 'Shadow '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightShadow',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterShadow',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanShadow',':20:20'),
		["OUTLINE"] = 'Outline '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnight1',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\Hunter1',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\Shaman1',':20:20'),
		["ORIGINAL"] = 'Original '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightOriginal',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterOriginal',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanOriginal',':20:20'),
		["GRADIENT"] = 'Gradient '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightGradient',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterGradient',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanGradient',':20:20'),
		["BW"] = 'Grey '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightBW',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterBW',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanBW',':20:20'),
		["UGG"] = 'U.GG '..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightUGG',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterUGG',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanUGG',':20:20'),
		["UGGGREY"] = 'U.GG Grey'..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\DeathKnightUGGBW',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\HunterUGGBW',':20:20')..E:TextureString('Interface\\Addons\\ElvUI_EltreumUI\\Media\\Textures\\Classes\\32\\ShamanUGGBW',':20:20'),
		["CUSTOM"] = 'Custom',
	}, false, nil, function() return E.db.ElvUI_EltreumUI.chat.chaticontype end, function(_, value) E.db.ElvUI_EltreumUI.chat.chaticontype = value end, function() return not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.classicons.style = "radio"
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons = E.Libs.ACH:Group(L["Path to file"], nil, 7, "tab",nil,nil, function() if not E.db.ElvUI_EltreumUI.chat.chaticonenable then return true else return false end end, function() if E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" then return true else return false end end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.inline = true
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.dk = E.Libs.ACH:Input(L["Death Knight"], "", 5, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.DEATHKNIGHT end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.DEATHKNIGHT = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end, E.Classic)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.dh = E.Libs.ACH:Input(L["Demon Hunter"], "", 6, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.DEMONHUNTER end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.DEMONHUNTER = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end, not E.Retail)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.druid = E.Libs.ACH:Input(L["Druid"], "", 7, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.DRUID end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.DRUID = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.hunter = E.Libs.ACH:Input(L["Hunter"], "", 8, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.HUNTER end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.HUNTER = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.mage = E.Libs.ACH:Input(L["Mage"], "", 9, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.MAGE end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.MAGE = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.monk = E.Libs.ACH:Input(L["Monk"], "", 10, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.MONK end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.MONK = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end, E.Classic)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.evoker = E.Libs.ACH:Input(L["Evoker"], "", 11, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.EVOKER end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.EVOKER = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end, not E.Retail)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.paladin = E.Libs.ACH:Input(L["Paladin"], "", 12, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.PALADIN end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.PALADIN = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.priest = E.Libs.ACH:Input(L["Priest"], "", 13, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.PRIEST end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.PRIEST = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.rogue = E.Libs.ACH:Input(L["Rogue"], "", 14, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.ROGUE end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.ROGUE = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.shaman = E.Libs.ACH:Input(L["Shaman"], "", 15, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.SHAMAN end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.SHAMAN = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.warlock = E.Libs.ACH:Input(L["Warlock"], "", 16, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.WARLOCK end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.WARLOCK = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
	ElvUI_EltreumUI.Options.args.chat.args.classicons.args.customicons.args.warrior = E.Libs.ACH:Input(L["Warrior"], "", 17, false, "full", function() return E.private.ElvUI_EltreumUI.chat.customicons.WARRIOR end, function(_,key) E.private.ElvUI_EltreumUI.chat.customicons.WARRIOR = key end, function() return E.db.ElvUI_EltreumUI.chat.chaticontype ~= "CUSTOM" or not E.db.ElvUI_EltreumUI.chat.chaticonenable end)
end
